------------------------------------------------------
CHAPTER 1 - HTTP
------------------------------------------------------

- Tim Berners-Lee created 3 components when he defined the web:

    1. HTML
    2. HTTP
    3. URLs



- Protocol Stack

    IP = used to direct traffic through the internet
    TCP = makes connection reliable by adding stability and retransmission



- HTTP Request Overview

    1. We type 'www.google.com' into the address bar of our web browser.  Note that
         our web browser automatically changes this to 'http://www.google.com:80',
         with the protocol and port specified.

       A DNS request is sent, which returns the IP address of the site (could be IPv4
         or IPv6).  Many large sites have servers all over the world, and the server
         closest to your location is reserved.


    2. Our web browser asks our computer to open a TCP connection to the IP address
         using either Port 80 or Port 443.


    3. Once the browser has a connection to the web server, it can start asking for the
         website using the HTTP protocol.  The HTTP request is sent to the server.


    4. The website responds with the document at the URL you requested.  Typically, 
         the document is HTML.  In other cases, 301 or 404 responses might be returned.


    5. The web browser processes the returned response.  If the returned response is
         HTML, the browser starts to parse the HTML and builds the in-memory DOM.
         During this processing, the browser sees other resources (CSS, Javascript, images)
         that it needs to display the page properly.


    6. The web browser requests any additional resources it needs.  The average website
         requires 75 additional resources!


    7. When the browser has enough critical resources, it starts to render the page on
         screen.  This requires care, because you don't want to make the user wait for
         every resource before you display the page.  However, if you don't have enough
         resources, elements will be jumping around the page.


    8. After the initial display of the page, the web browser continues to download other
         resources that the page needs and updates the page as it processes them.  These
         resources include nonciritical items such as images and advertising tracking scripts.


    9. When the page is fully loaded, the browser stops the loading icon (usually in the address
        bar), and fires the 'OnLoad JavaScript' event, which JavaScript code may then use as a 
        sign that the page is ready to perform certain actions.


    10. At this point, the page is fully loaded, but the browser hasn't stopped sending out 
         requests.  Most web pages are now feature-rich applications that continually communicate
         with various servers to load additional content.



- OSI Model

    Layer 7 = Application Layer
                HTTP

    Layer 6 = Presentation Layer
                File format (ASCII, UTF-8, JPG, PNG, ...)

    Layer 5 = Session Layer
                SSL/TLS

    Layer 4 = Transport Layer
                TCP

    Layer 3 = Network Layer
                IP

    Layer 2 = Data Link Layer
                Ethernet

    Layer 1 = Physical Layer
                Cable / Wifi / Mobile



- Telnet Example

    - This is the basic syntax of an HTTP request, after you open a connection:

        GET /page.html↵


    - To illustrate, we can open a telnet session to a website, then send an HTTP
        request:

          # Create connection to server
          $ telnet www.google.com 80
      
          Trying 172.217.3.196...
          Connected to www.google.com.
          Escape character is '^]'.
      
      
          # Now, send HTTP request
          GET /
      
          HTTP/1.0 200 OK
          Date: Sun, 10 Sep 2017 16:20:09 GMT
          Expires: -1
          Cache-Control: private, max-age=0
          Content-Type: text/html; charset=ISO-8859-1
          P3P: CP="This is not a P3P policy! See
               https://www.google.com/support/accounts/answer/151657?hl=en for more info."
          Server: gws
          X-XSS-Protection: 1; mode=block
          X-Frame-Options: SAMEORIGIN
          Set-Cookie:
                NID=111=QIMb1TZHhHGXEPjUXqbHChZGCcVLFQOvmqjNcUIejUXqbHChZKtrF4Hf4x4DVjTb01R
                8DWShPlu6_aQ-AnPXgONzEoGOpapm_VOTW0Y8TWVpNap_1234567890-p2g; expires=Mon,
                12-Mar-2018 16:20:09 GMT; path=/; domain=.google.com; HttpOnly
          Accept-Ranges: none
          Vary: Accept-Encoding
          
          <!doctype html><html itemscope="" itemtype="http://schema.org/WebPage"
               lang="en"><head><meta content="Search the world's information, including
               webpages, images, videos and more. Google has many special features to help
               you find exactly what you're looking for." name="description
          
          ...etc. (Most HTML omitted)
          
          </script></div></body></html>Connection closed by foreign host.


    - As we see at the end of each example, the connection is closed.  To send another
        HTTP request, we need to reopen the connection.  To avoid this step, we can use
        HTTP/1.1 (which keeps the connection open by default).  

      Here is a HTTP/1.1 request (a second carriage return is required).

        GET / HTTP/1.1↵↵



- HTTP/0.9

- HTTP/1.0

- HTTP/1.0 Methods

- HTTP/1.0 Request Headers

- HTTP/1.0 Response Codes

- HTTP/1.0 Response Headers

- HTTP/1.1

- Mandatory Host Header

- Persistent Connections

- Other New Features

- Introduction to HTTPS

- SSL, TLS, HTTPS, and HTTP